{"version":3,"sources":["main.js"],"names":["heroNavSpan","document","querySelectorAll","heroNav","anchors","userHeight","addEventListener","innerHeight","window","e","forEach","event","cssText","this","scrollY","nextElementSibling","classList","span","remove","anchor","add","let","block","preventDefault","onEntry","entry","getAttribute","substring","change","isIntersecting","scrollIntoView","target","options","threshold","observer","IntersectionObserver","elements","elm","observe"],"mappings":"AAAA,MAAMA,YAAcC,SAASC,iBAAiB,gBAAgB,EACxDC,QAAUF,SAASC,iBAAiB,uBAAuB,EAC3DE,QAAUH,SAASC,iBAAiB,cAAc,EAIlDG,WAACC,OAAiBC,YAExBC,OAAEF,iBAAA,SAAAG,IAGFN,SAAQO,KAASC,MAAKC,yBAAKC,KAAAC,WAH3B,CAAC,EAGDX,QAIMO,QAAAC,IAHJA,EAIEA,iBAAMI,QAAmBC,KACzBhB,YAAAU,QAAAO,IACFA,EAAAD,UAAAE,OAAA,sBAAA,CAGF,CAAK,EACHC,EAAOb,mBAAiBU,UAASI,IAAA,sBAAa,CAL9C,CAAC,CACH,CAAC,EAGD,IAAKC,IAQCC,KAAOlB,QAPXe,EAQIb,iBAAA,QAAA,SAAAG,GACFA,EAAAc,eAAA,EAGKC,EAAQC,EAAOC,aAAA,MAAA,EAAAC,UAAA,CAAA,EAEpB1B,SAAI2B,eAAOC,CAAgB,EAAAC,eAAA,CACzBF,SAAOG,SACRT,MACI,OATL,CAAC,CACH,CAAC,EAcH,SAAIU,QAAUP,GACZQ,EAAAA,QAAYL,IACbA,EAAAC,gBACGK,EAAQH,OAAOI,UAAAA,IAAAA,gBAA8BH,CAN/C,CAAC,CACH,CAEAX,IAAIW,QAAU,CACZC,UAAW,CAAC,GACd,EACIC,SAAW,IAAIC,qBAAqBX,QAASQ,OAAO,EACpDI,SAAWnC,SAASC,iBAAiB,iBAAiB,EAE1D,IAAKmB,IAAIgB,KAAOD,SACdF,SAASI,QAAQD,CAAG","file":"main.min.js","sourcesContent":["const heroNavSpan = document.querySelectorAll('.hero_nav_span');\nconst heroNav = document.querySelectorAll('.hero_nav_scroll_link');\nconst anchors = document.querySelectorAll('a[href*=\"#\"]')\n\nconst userHeight = window.innerHeight;\n\nwindow.addEventListener('scroll', e => {\n  document.body.style.cssText += `--scrollTop: ${this.scrollY}px`\n})\n\n\nheroNav.forEach((event) => {\n  event.addEventListener('click', () => {\n    heroNavSpan.forEach((span) => {\n      span.classList.remove('hero_nav_span_active');\n    });\n    event.nextElementSibling.classList.add('hero_nav_span_active');\n  });\n});\n\n\nfor (let anchor of anchors) {\n  anchor.addEventListener('click', function (e) {\n    e.preventDefault()\n\n    const blockID = anchor.getAttribute('href').substring(1)\n\n    document.getElementById(blockID).scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    })\n  })\n}\n\nfunction onEntry(entry) {\n  entry.forEach(change => {\n    if (change.isIntersecting) {\n      change.target.classList.add('show_animation');\n    }\n    else {\n      // change.target.classList.remove('show_animation');  // для зворотньої анімації\n    }\n  });\n}\n\nlet options = {\n  threshold: [0.5]\n};\nlet observer = new IntersectionObserver(onEntry, options);\nlet elements = document.querySelectorAll('.hide_animation');\n\nfor (let elm of elements) {\n  observer.observe(elm);\n}\n"]}