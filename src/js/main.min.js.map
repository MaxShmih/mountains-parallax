{"version":3,"sources":["main.js"],"names":["heroNavSpan","document","querySelectorAll","heroNav","anchors","let","threshold","elements","onEntry","options","window","addEventListener","forEach","event","nextElementSibling","classList","span","remove","anchor","add","behavior","block","e","preventDefault","blockID","getAttribute","substring","console","getElementById","documentElement","log","scrollTop","entry","change","isIntersecting","observer","observe","navBarChecker","target","this","scrollY","elm"],"mappings":"AAAA,MAAMA,YAAcC,SAASC,iBAAiB,gBAAgB,EACxDC,QAAUF,SAASC,iBAAiB,uBAAuB,EAC3DE,QAAUH,SAASC,iBAAiB,cAAc,EAExDG,IACEC,QAAY,CACbA,UAAA,CAAA,IACD,EACIC,SAAWN,IAAAA,qBAAyBO,QAACC,OAAA,EAEzCC,SAAOC,SAAiBT,iBAAe,iBAAA,EAIvC,SAIMF,gBAFJG,QAIMS,QAAAC,IAHJA,EAIEA,iBAAMC,QAAmBC,WACzBf,YAAAY,QAAAI,IACFA,EAAAD,UAAAE,OAAA,sBAAA,CAEF,CAAK,EACHC,EAAOP,mBAAiBI,UAASI,IAAA,sBAAa,CAJ9C,CAAC,CACH,CAAC,EAED,IAAKd,IAOCe,KAAUhB,QANdc,EAOIG,iBAAO,QAAA,SAAAC,GACTA,EAAEC,eAAA,EAENC,EAAAN,EAAAO,aAAA,MAAA,EAAAC,UAAA,CAAA,EAGEC,SAAWC,eAAUC,CAAAA,EAAAA,eAA0B,CAC3C5B,SAAS4B,SACX7B,MAAAA,OAPA,CAAC,CACH,CAAC,EAWHU,OAAEC,iBAAA,SAAAW,IACJK,QAAAG,IAAA7B,SAAA4B,gBAAAE,SAAA,EAGwB,IAAxB9B,SAAiB+B,gBAAOD,YACtBC,YAAcC,QAAUjB,IAClBiB,EAAAA,UAAOC,OAAc,sBAAE,CACzBD,CAAAA,EACDjC,YACI,GAAAe,UAAAI,IAAA,sBAAA,EATP,CAAC,CACH,CAGA,SAYEgB,QAASC,GACXJ,EAAApB,QAAAqB,IAEAI,EAAeH,gBAZTD,EAAOK,OAAOvB,UAAUI,IAAI,gBAAgB,CAKhD,CAAC,CACH,CA/CAT,OAAEC,iBAAA,SAAAW,IAEFrB,SAASoC,KAAAA,MAAaA,yBAAGE,KAAAC,WAFzB,CAAC,EAiDD,IAAKnC,IAAIoC,KAAOlC,SACd4B,SAASC,QAAQK,CAAG,EAGtBJ,cAAc","file":"main.min.js","sourcesContent":["const heroNavSpan = document.querySelectorAll('.hero_nav_span');\nconst heroNav = document.querySelectorAll('.hero_nav_scroll_link');\nconst anchors = document.querySelectorAll('a[href*=\"#\"]');\n\nlet options = {\n  threshold: [0.35]\n};\nlet observer = new IntersectionObserver(onEntry, options);\nlet elements = document.querySelectorAll('.hide_animation');\n\nwindow.addEventListener('scroll', e => {\n  document.body.style.cssText += `--scrollTop: ${this.scrollY}px`\n})\n\nfunction navBarChecker() {\n\n  heroNav.forEach((event) => {\n    event.addEventListener('click', function () {\n      heroNavSpan.forEach((span) => {\n        span.classList.remove('hero_nav_span_active');\n      });\n      event.nextElementSibling.classList.add('hero_nav_span_active');\n    });\n  });\n\n  for (let anchor of anchors) {\n    anchor.addEventListener('click', function (e) {\n      e.preventDefault()\n\n      const blockID = anchor.getAttribute('href').substring(1)\n\n      document.getElementById(blockID).scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      })\n    })\n  }\n\n  window.addEventListener('scroll', e => {\n    console.log(document.documentElement.scrollTop)\n    if (document.documentElement.scrollTop === 0) {\n      heroNavSpan.forEach((span) => {\n        span.classList.remove('hero_nav_span_active');\n      });\n      heroNavSpan[0].classList.add('hero_nav_span_active');\n    }\n  })\n}\n\n\nfunction onEntry(entry) {\n  entry.forEach(change => {\n    if (change.isIntersecting) {\n      change.target.classList.add('show_animation');\n    }\n    else {\n      // change.target.classList.remove('show_animation');  // для зворотньої анімації\n    }\n  });\n}\n\nfor (let elm of elements) {\n  observer.observe(elm);\n}\n\nnavBarChecker();\n"]}